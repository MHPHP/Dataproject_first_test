beta_data <- beta_data[!(frekvens_data[[specie]] == 0)]
if (length( unique(beta_data)) > 1) {
beta_data_fitted <- fitdist(beta_data, "beta", method = "mme")
beta_fit[nrow(beta_fit) + 1,] <- c(specie, beta_data_fitted$estimate[1], beta_data_fitted$estimate[2])
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
# for each plot create a list with all the cover data and a total of how may observations.
shanon_list <- c()
for (row in 1:nrow(cover_data)) {
total_cover_obs <- sum(cover_data[row,]) #is not currently used
# Create an empty list for a given row
all_obs <- c()
# for a given row, find out what species is found in frekvens
species_spotted_in_frekvens <- colnames(frekvens_data[c(frekvens_data[row,]  == 1)])
#For each species spotten in frekvens, appends its posterior cover to the cover data for that row
for (species_spotted in species_spotted_in_frekvens ) {
alpha_post <- as.numeric((as.numeric(beta_fit[beta_fit$species == species_spotted,]$a) +
as.numeric(cover_data[[species_spotted]][row]) ))
beta_post <-  as.numeric(beta_fit[beta_fit$species == species_spotted,]$b) + 16 - as.numeric(cover_data[[species_spotted]][row])
all_obs <- append(all_obs, (alpha_post)/(alpha_post+beta_post))
}
print(c(length(all_obs), length(species_spotted_in_frekvens)))
#Calculate the shanon index value and append it to the list after normalizing and removing zeroes
total_cover <- sum(all_obs)
all_obs <- all_obs[!(all_obs == 0)]
shanon_value <- -sum(all_obs/total_cover * log((all_obs/total_cover)))
shanon_list <- append(shanon_list,shanon_value)
}
print(beta_fit)
return(shanon_list)
}
data_5130$shanon_index_v4 <- shanon_index_v4(cover_data1, frekvens_data1)
shanon_index_v4 <- function(cover_data, frekvens_data) {
#Load functions
library(tidyverse)
library(fitdistrplus)
#create data frame to hold the fitted values for each species
beta_fit <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("species","a", "b")
colnames(beta_fit) <- x
# for Each species calculate the shape parameter for the fitted beta distribution and save them in a data frame.
for (specie in colnames(frekvens_data)) {
if (specie %in% colnames(cover_data)) {
beta_data <- cover_data[,specie]/16
#remove all plots with 0 in cover or remove all plots with 0 in frekvens.
#beta_data <- beta_data[!(beta_data == 0)]
beta_data <- beta_data[!(frekvens_data[[specie]] == 0)]
if (length( unique(beta_data)) > 1) {
beta_data_fitted <- fitdist(beta_data, "beta", method = "mme")
beta_fit[nrow(beta_fit) + 1,] <- c(specie, beta_data_fitted$estimate[1], beta_data_fitted$estimate[2])
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
# for each plot create a list with all the cover data and a total of how may observations.
shanon_list <- c()
for (row in 1:nrow(cover_data)) {
total_cover_obs <- sum(cover_data[row,]) #is not currently used
# Create an empty list for a given row
all_obs <- c()
# for a given row, find out what species is found in frekvens
species_spotted_in_frekvens <- colnames(frekvens_data[c(frekvens_data[row,]  == 1)])
#For each species spotten in frekvens, appends its posterior cover to the cover data for that row
for (species_spotted in species_spotted_in_frekvens ) {
alpha_post <- as.numeric((as.numeric(beta_fit[beta_fit$species == species_spotted,]$a) +
as.numeric(cover_data[[species_spotted]][row]) ))
beta_post <-  as.numeric(beta_fit[beta_fit$species == species_spotted,]$b) + 16 - as.numeric(cover_data[[species_spotted]][row])
all_obs <- append(all_obs, (alpha_post)/(alpha_post+beta_post))
}
print(c(all_obs, species_spotted_in_frekvens))
print(c(length(all_obs), length(species_spotted_in_frekvens)))
#Calculate the shanon index value and append it to the list after normalizing and removing zeroes
total_cover <- sum(all_obs)
all_obs <- all_obs[!(all_obs == 0)]
shanon_value <- -sum(all_obs/total_cover * log((all_obs/total_cover)))
shanon_list <- append(shanon_list,shanon_value)
}
print(beta_fit)
return(shanon_list)
}
data_5130$shanon_index_v4 <- shanon_index_v4(cover_data1, frekvens_data1)
0/16
shanon_index_v4 <- function(cover_data, frekvens_data) {
#Load functions
library(tidyverse)
library(fitdistrplus)
#create data frame to hold the fitted values for each species
beta_fit <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("species","a", "b")
colnames(beta_fit) <- x
# for Each species calculate the shape parameter for the fitted beta distribution and save them in a data frame.
for (specie in colnames(frekvens_data)) {
if (specie %in% colnames(cover_data)) {
beta_data <- cover_data[,specie]/16
#remove all plots with 0 in cover or remove all plots with 0 in frekvens.
#beta_data <- beta_data[!(beta_data == 0)]
beta_data <- beta_data[!(frekvens_data[[specie]] == 0)]
if (length( unique(beta_data)) > 1) {
beta_data_fitted <- fitdist(beta_data, "beta", method = "mme")
beta_fit[nrow(beta_fit) + 1,] <- c(specie, beta_data_fitted$estimate[1], beta_data_fitted$estimate[2])
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
# for each plot create a list with all the cover data and a total of how may observations.
shanon_list <- c()
for (row in 1:nrow(cover_data)) {
total_cover_obs <- sum(cover_data[row,]) #is not currently used
# Create an empty list for a given row
all_obs <- c()
# for a given row, find out what species is found in frekvens
species_spotted_in_frekvens <- colnames(frekvens_data[c(frekvens_data[row,]  == 1)])
#For each species spotten in frekvens, appends its posterior cover to the cover data for that row
for (species_spotted in species_spotted_in_frekvens ) {
alpha_post <- as.numeric((as.numeric(beta_fit[beta_fit$species == species_spotted,]$a) +
as.numeric(cover_data[[species_spotted]][row]) ))
beta_post <-  as.numeric(beta_fit[beta_fit$species == species_spotted,]$b) + 16 - as.numeric(cover_data[[species_spotted]][row])
append(all_obs, (alpha_post)/(alpha_post+beta_post))
}
print(c(all_obs, species_spotted_in_frekvens))
print(c(length(all_obs), length(species_spotted_in_frekvens)))
#Calculate the shanon index value and append it to the list after normalizing and removing zeroes
total_cover <- sum(all_obs)
all_obs <- all_obs[!(all_obs == 0)]
shanon_value <- -sum(all_obs/total_cover * log((all_obs/total_cover)))
shanon_list <- append(shanon_list,shanon_value)
}
print(beta_fit)
return(shanon_list)
}
data_5130$shanon_index_v4 <- shanon_index_v4(cover_data1, frekvens_data1)
shanon_index_v4 <- function(cover_data, frekvens_data) {
#Load functions
library(tidyverse)
library(fitdistrplus)
#create data frame to hold the fitted values for each species
beta_fit <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("species","a", "b")
colnames(beta_fit) <- x
# for Each species calculate the shape parameter for the fitted beta distribution and save them in a data frame.
for (specie in colnames(frekvens_data)) {
if (specie %in% colnames(cover_data)) {
beta_data <- cover_data[,specie]/16
#remove all plots with 0 in cover or remove all plots with 0 in frekvens.
#beta_data <- beta_data[!(beta_data == 0)]
beta_data <- beta_data[!(frekvens_data[[specie]] == 0)]
if (length( unique(beta_data)) > 1) {
beta_data_fitted <- fitdist(beta_data, "beta", method = "mme")
beta_fit[nrow(beta_fit) + 1,] <- c(specie, beta_data_fitted$estimate[1], beta_data_fitted$estimate[2])
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
# for each plot create a list with all the cover data and a total of how may observations.
shanon_list <- c()
for (row in 1:nrow(cover_data)) {
total_cover_obs <- sum(cover_data[row,]) #is not currently used
# Create an empty list for a given row
all_obs <- c()
# for a given row, find out what species is found in frekvens
species_spotted_in_frekvens <- colnames(frekvens_data[c(frekvens_data[row,]  == 1)])
#For each species spotten in frekvens, appends its posterior cover to the cover data for that row
for (species_spotted in species_spotted_in_frekvens ) {
alpha_post <- as.numeric((as.numeric(beta_fit[beta_fit$species == species_spotted,]$a) +
as.numeric(cover_data[[species_spotted]][row]) ))
beta_post <-  as.numeric(beta_fit[beta_fit$species == species_spotted,]$b) + 16 - as.numeric(cover_data[[species_spotted]][row])
append(all_obs, (alpha_post)/(alpha_post+beta_post))
}
#print(c(all_obs, species_spotted_in_frekvens))
print(c(length(all_obs), length(species_spotted_in_frekvens)))
#Calculate the shanon index value and append it to the list after normalizing and removing zeroes
total_cover <- sum(all_obs)
all_obs <- all_obs[!(all_obs == 0)]
shanon_value <- -sum(all_obs/total_cover * log((all_obs/total_cover)))
shanon_list <- append(shanon_list,shanon_value)
}
print(beta_fit)
return(shanon_list)
}
0/16
data_5130$shanon_index_v4 <- shanon_index_v4(cover_data1, frekvens_data1)
shanon_index_v4 <- function(cover_data, frekvens_data) {
#Load functions
library(tidyverse)
library(fitdistrplus)
#create data frame to hold the fitted values for each species
beta_fit <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("species","a", "b")
colnames(beta_fit) <- x
# for Each species calculate the shape parameter for the fitted beta distribution and save them in a data frame.
for (specie in colnames(frekvens_data)) {
if (specie %in% colnames(cover_data)) {
beta_data <- cover_data[,specie]/16
#remove all plots with 0 in cover or remove all plots with 0 in frekvens.
#beta_data <- beta_data[!(beta_data == 0)]
beta_data <- beta_data[!(frekvens_data[[specie]] == 0)]
if (length( unique(beta_data)) > 1) {
beta_data_fitted <- fitdist(beta_data, "beta", method = "mme")
beta_fit[nrow(beta_fit) + 1,] <- c(specie, beta_data_fitted$estimate[1], beta_data_fitted$estimate[2])
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
# for each plot create a list with all the cover data and a total of how may observations.
shanon_list <- c()
for (row in 1:nrow(cover_data)) {
total_cover_obs <- sum(cover_data[row,]) #is not currently used
# Create an empty list for a given row
all_obs <- c()
# for a given row, find out what species is found in frekvens
species_spotted_in_frekvens <- colnames(frekvens_data[c(frekvens_data[row,]  == 1)])
#For each species spotted in frekvens, appends its posterior cover to the cover data for that row
for (species_spotted in species_spotted_in_frekvens ) {
alpha_post <- (as.numeric(beta_fit[beta_fit$species == species_spotted,]$a) +
as.numeric(cover_data[[species_spotted]][row]) )
beta_post <-  as.numeric(beta_fit[beta_fit$species == species_spotted,]$b) + 16 - as.numeric(cover_data[[species_spotted]][row])
all_obs <- append(all_obs, (alpha_post)/(alpha_post+beta_post))
}
#print(c(all_obs, species_spotted_in_frekvens))
print(c(length(all_obs), length(species_spotted_in_frekvens)))
#Calculate the shanon index value and append it to the list after normalizing and removing zeroes
total_cover <- sum(all_obs)
all_obs <- all_obs[!(all_obs == 0)]
shanon_value <- -sum(all_obs/total_cover * log((all_obs/total_cover)))
shanon_list <- append(shanon_list,shanon_value)
}
print(beta_fit)
return(shanon_list)
}
shanon_index_v4 <- function(cover_data, frekvens_data) {
#Load functions
library(tidyverse)
library(fitdistrplus)
#create data frame to hold the fitted values for each species
beta_fit <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("species","a", "b")
colnames(beta_fit) <- x
# for Each species calculate the shape parameter for the fitted beta distribution and save them in a data frame.
for (specie in colnames(frekvens_data)) {
if (specie %in% colnames(cover_data)) {
beta_data <- cover_data[,specie]/16
#remove all plots with 0 in cover or remove all plots with 0 in frekvens.
#beta_data <- beta_data[!(beta_data == 0)]
beta_data <- beta_data[!(frekvens_data[[specie]] == 0)]
if (length( unique(beta_data)) > 1) {
beta_data_fitted <- fitdist(beta_data, "beta", method = "mme")
beta_fit[nrow(beta_fit) + 1,] <- c(specie, beta_data_fitted$estimate[1], beta_data_fitted$estimate[2])
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
# for each plot create a list with all the cover data and a total of how may observations.
shanon_list <- c()
for (row in 1:nrow(cover_data)) {
total_cover_obs <- sum(cover_data[row,]) #is not currently used
# Create an empty list for a given row
all_obs <- c()
# for a given row, find out what species is found in frekvens
species_spotted_in_frekvens <- colnames(frekvens_data[c(frekvens_data[row,]  == 1)])
#For each species spotted in frekvens, appends its posterior cover to the cover data for that row
for (species_spotted in species_spotted_in_frekvens ) {
alpha_post <- as.numeric(beta_fit[beta_fit$species == species_spotted,]$a) +
as.numeric(cover_data[[species_spotted]][row])
beta_post <-  as.numeric(beta_fit[beta_fit$species == species_spotted,]$b) + 16 - as.numeric(cover_data[[species_spotted]][row])
all_obs <- append(all_obs, (alpha_post)/(alpha_post+beta_post))
}
#print(c(all_obs, species_spotted_in_frekvens))
print(c(length(all_obs), length(species_spotted_in_frekvens)))
#Calculate the shanon index value and append it to the list after normalizing and removing zeroes
total_cover <- sum(all_obs)
all_obs <- all_obs[!(all_obs == 0)]
shanon_value <- -sum(all_obs/total_cover * log((all_obs/total_cover)))
shanon_list <- append(shanon_list,shanon_value)
}
print(beta_fit)
return(shanon_list)
}
data_5130$shanon_index_v4 <- shanon_index_v4(cover_data1, frekvens_data1)
shanon_index_v4 <- function(cover_data, frekvens_data) {
#Load functions
library(tidyverse)
library(fitdistrplus)
#create data frame to hold the fitted values for each species
beta_fit <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("species","a", "b")
colnames(beta_fit) <- x
# for Each species calculate the shape parameter for the fitted beta distribution and save them in a data frame.
for (specie in colnames(frekvens_data)) {
if (specie %in% colnames(cover_data)) {
beta_data <- cover_data[,specie]/16
#remove all plots with 0 in cover or remove all plots with 0 in frekvens.
#beta_data <- beta_data[!(beta_data == 0)]
beta_data <- beta_data[!(frekvens_data[[specie]] == 0)]
if (length( unique(beta_data)) > 1) {
beta_data_fitted <- fitdist(beta_data, "beta", method = "mme")
beta_fit[nrow(beta_fit) + 1,] <- c(specie, beta_data_fitted$estimate[1], beta_data_fitted$estimate[2])
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
# for each plot create a list with all the cover data and a total of how may observations.
shanon_list <- c()
for (row in 1:nrow(cover_data)) {
total_cover_obs <- sum(cover_data[row,]) #is not currently used
# Create an empty list for a given row
all_obs <- c()
# for a given row, find out what species is found in frekvens
species_spotted_in_frekvens <- colnames(frekvens_data[c(frekvens_data[row,]  == 1)])
#For each species spotted in frekvens, appends its posterior cover to the cover data for that row
for (species_spotted in species_spotted_in_frekvens ) {
alpha_post <- as.numeric(beta_fit[beta_fit$species == species_spotted,]$a) +
as.numeric(cover_data[[species_spotted]][row])
beta_post <-  as.numeric(beta_fit[beta_fit$species == species_spotted,]$b) + 16 - as.numeric(cover_data[[species_spotted]][row])
print(c(alpha_post, beta_post))
all_obs <- append(all_obs, (alpha_post)/(alpha_post+beta_post))
}
#print(c(all_obs, species_spotted_in_frekvens))
print(c(length(all_obs), length(species_spotted_in_frekvens)))
#Calculate the shanon index value and append it to the list after normalizing and removing zeroes
total_cover <- sum(all_obs)
all_obs <- all_obs[!(all_obs == 0)]
shanon_value <- -sum(all_obs/total_cover * log((all_obs/total_cover)))
shanon_list <- append(shanon_list,shanon_value)
}
print(beta_fit)
return(shanon_list)
}
data_5130$shanon_index_v4 <- shanon_index_v4(cover_data1, frekvens_data1)
shanon_index_v4 <- function(cover_data, frekvens_data) {
#Load functions
library(tidyverse)
library(fitdistrplus)
#create data frame to hold the fitted values for each species
beta_fit <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("species","a", "b")
colnames(beta_fit) <- x
# for Each species calculate the shape parameter for the fitted beta distribution and save them in a data frame.
for (specie in colnames(frekvens_data)) {
if (specie %in% colnames(cover_data)) {
beta_data <- cover_data[,specie]/16
#remove all plots with 0 in cover or remove all plots with 0 in frekvens.
#beta_data <- beta_data[!(beta_data == 0)]
beta_data <- beta_data[!(frekvens_data[[specie]] == 0)]
if (length( unique(beta_data)) > 1) {
beta_data_fitted <- fitdist(beta_data, "beta", method = "mme")
beta_fit[nrow(beta_fit) + 1,] <- c(specie, beta_data_fitted$estimate[1], beta_data_fitted$estimate[2])
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
# for each plot create a list with all the cover data and a total of how may observations.
shanon_list <- c()
for (row in 1:nrow(cover_data)) {
total_cover_obs <- sum(cover_data[row,]) #is not currently used
# Create an empty list for a given row
all_obs <- c()
# for a given row, find out what species is found in frekvens
species_spotted_in_frekvens <- colnames(frekvens_data[c(frekvens_data[row,]  == 1)])
#For each species spotted in frekvens, appends its posterior cover to the cover data for that row
for (species_spotted in species_spotted_in_frekvens ) {
alpha_post <- as.numeric(beta_fit[beta_fit$species == species_spotted,]$a) +
as.numeric(cover_data[[species_spotted]][row])
beta_post <-  as.numeric(beta_fit[beta_fit$species == species_spotted,]$b) + 16 - as.numeric(cover_data[[species_spotted]][row])
print(c("a",alpha_post, "b", beta_post))
all_obs <- append(all_obs, (alpha_post)/(alpha_post+beta_post))
}
#print(c(all_obs, species_spotted_in_frekvens))
print(c(length(all_obs), length(species_spotted_in_frekvens)))
#Calculate the shanon index value and append it to the list after normalizing and removing zeroes
total_cover <- sum(all_obs)
all_obs <- all_obs[!(all_obs == 0)]
shanon_value <- -sum(all_obs/total_cover * log((all_obs/total_cover)))
shanon_list <- append(shanon_list,shanon_value)
}
print(beta_fit)
return(shanon_list)
}
data_5130$shanon_index_v4 <- shanon_index_v4(cover_data1, frekvens_data1)
shanon_index_v4 <- function(cover_data, frekvens_data) {
#Load functions
library(tidyverse)
library(fitdistrplus)
#create data frame to hold the fitted values for each species
beta_fit <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("species","a", "b")
colnames(beta_fit) <- x
# for Each species calculate the shape parameter for the fitted beta distribution and save them in a data frame.
for (specie in colnames(frekvens_data)) {
if (specie %in% colnames(cover_data)) {
beta_data <- cover_data[,specie]/16
#remove all plots with 0 in cover or remove all plots with 0 in frekvens.
#beta_data <- beta_data[!(beta_data == 0)]
beta_data <- beta_data[!(frekvens_data[[specie]] == 0)]
if (length( unique(beta_data)) > 1) {
beta_data_fitted <- fitdist(beta_data, "beta", method = "mme")
beta_fit[nrow(beta_fit) + 1,] <- c(specie, beta_data_fitted$estimate[1], beta_data_fitted$estimate[2])
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
# for each plot create a list with all the cover data and a total of how may observations.
shanon_list <- c()
for (row in 1:nrow(cover_data)) {
total_cover_obs <- sum(cover_data[row,]) #is not currently used
# Create an empty list for a given row
all_obs <- c()
# for a given row, find out what species is found in frekvens
species_spotted_in_frekvens <- colnames(frekvens_data[c(frekvens_data[row,]  == 1)])
#For each species spotted in frekvens, appends its posterior cover to the cover data for that row
for (species_spotted in species_spotted_in_frekvens ) {
alpha_post <- as.numeric(beta_fit[beta_fit$species == species_spotted,]$a) +
as.numeric(cover_data[[species_spotted]][row])
beta_post <-  as.numeric(beta_fit[beta_fit$species == species_spotted,]$b) + 16 - as.numeric(cover_data[[species_spotted]][row])
print(c("a",alpha_post, "b", beta_post, species_spotted))
all_obs <- append(all_obs, (alpha_post)/(alpha_post+beta_post))
}
#print(c(all_obs, species_spotted_in_frekvens))
print(c(length(all_obs), length(species_spotted_in_frekvens)))
#Calculate the shanon index value and append it to the list after normalizing and removing zeroes
total_cover <- sum(all_obs)
all_obs <- all_obs[!(all_obs == 0)]
shanon_value <- -sum(all_obs/total_cover * log((all_obs/total_cover)))
shanon_list <- append(shanon_list,shanon_value)
}
print(beta_fit)
return(shanon_list)
}
data_5130$shanon_index_v4 <- shanon_index_v4(cover_data1, frekvens_data1)
shanon_index_v4 <- function(cover_data, frekvens_data) {
#Load functions
library(tidyverse)
library(fitdistrplus)
#create data frame to hold the fitted values for each species
beta_fit <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("species","a", "b")
colnames(beta_fit) <- x
# for Each species calculate the shape parameter for the fitted beta distribution and save them in a data frame.
for (specie in colnames(frekvens_data)) {
if (specie %in% colnames(cover_data)) {
beta_data <- cover_data[,specie]/16
#remove all plots with 0 in cover or remove all plots with 0 in frekvens.
#beta_data <- beta_data[!(beta_data == 0)]
beta_data <- beta_data[!(frekvens_data[[specie]] == 0)]
if (length( unique(beta_data)) > 1) {
beta_data_fitted <- fitdist(beta_data, "beta", method = "mme")
beta_fit[nrow(beta_fit) + 1,] <- c(specie, beta_data_fitted$estimate[1], beta_data_fitted$estimate[2])
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
else
beta_fit[nrow(beta_fit) + 1,] <- c(specie, 0, 0)
}
# for each plot create a list with all the cover data and a total of how may observations.
shanon_list <- c()
for (row in 1:nrow(cover_data)) {
total_cover_obs <- sum(cover_data[row,]) #is not currently used
# Create an empty list for a given row
all_obs <- c()
# for a given row, find out what species is found in frekvens
species_spotted_in_frekvens <- colnames(frekvens_data[c(frekvens_data[row,]  == 1)])
#For each species spotted in frekvens, appends its posterior cover to the cover data for that row
for (species_spotted in species_spotted_in_frekvens ) {
alpha_post <- as.numeric(beta_fit[beta_fit$species == species_spotted,]$a) +
as.numeric(cover_data[[species_spotted]][row])
beta_post <-  as.numeric(beta_fit[beta_fit$species == species_spotted,]$b) + 16 - as.numeric(cover_data[[species_spotted]][row])
#print(c("a",alpha_post, "b", beta_post, species_spotted))
all_obs <- append(all_obs, (alpha_post)/(alpha_post+beta_post))
}
#print(c(all_obs, species_spotted_in_frekvens))
#print(c(length(all_obs), length(species_spotted_in_frekvens)))
#Calculate the shanon index value and append it to the list after normalizing and removing zeroes
total_cover <- sum(all_obs)
all_obs <- all_obs[!(all_obs == 0)]
shanon_value <- -sum(all_obs/total_cover * log((all_obs/total_cover)))
shanon_list <- append(shanon_list,shanon_value)
}
return(beta_fit)
#return(shanon_list)
}
beta2 <- shanon_index_v4(cover_data1, frekvens_data1)
View(beta2)
write.csv(data_5130, file = "../Data/Processed data//data_5130.csv", row.names=FALSE)
